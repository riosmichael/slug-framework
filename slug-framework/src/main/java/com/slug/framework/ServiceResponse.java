package com.slug.framework;

import java.util.ArrayList;
import java.util.List;

import org.springframework.http.HttpStatus;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.slug.framework.messages.Message;

public class ServiceResponse<T> {

	/**
	 * Contains messages that will be sent/shown to client.
	 * Messages can be generated by class instances of {@code AbstractValidator} or {@code Processor}.
	 */
	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	private List<Message> messages;
	
	
	/**
	 * The actual JSON data. The structure will be based on a given {@code Type Parameter}
	 */
	@JsonInclude(JsonInclude.Include.NON_NULL)
	private T data;
	
	
	/**
	 * Describe the status of service request, this may return the following status 
	 * {@code HttpStatus.OK} and {@code HttpStatus.BAD_REQUEST}.
	 * <br>
	 * <br>{@code HttpStatus.OK} will be returned if no message(s) with level ERROR is stored in messages property.
	 * <br>{@code HttpStatus.BAD_REQUEST} this will be returned if exception(s) is encountered during processing or 
	 * messages with level ERROR is stored in messages property.
	 * <br>
	 */
	private HttpStatus status;
	
	
	public ServiceResponse() {
		messages = new ArrayList<>();
	}
	
	
	public T getData() {
		return data;
	}

	public void setData(T data) {
		this.data = data;
	}

	
	public List<Message> getMessages(){
		return messages;
	}
	
	public void setMessages(List<Message> messages) {
		this.messages = messages;
	}


	public HttpStatus getStatus() {
		return status;
	}

	public void setStatus(HttpStatus httpStatus) {
		this.status = httpStatus;
	}
	
	
	
}
